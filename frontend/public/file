const express = require('express');
const mongoose = require('mongoose');
const bodyParser = require('body-parser');
const cors = require('cors');

const app = express();

// Middleware
app.use(cors());
app.use(bodyParser.json());

// MongoDB connection
const mongoURI = 'YOUR_MONGO_URI'; 
mongoose.connect(mongoURI, { useNewUrlParser: true, useUnifiedTopology: true })
    .then(() => console.log('MongoDB Connected'))
    .catch(err => console.log(err));

// Define Schema and Model
const NameSchema = new mongoose.Schema({
    name: { type: String, required: true }
});

const Name = mongoose.model('Name', NameSchema);

// Routes
app.post('/add-name', async (req, res) => {
    const { name } = req.body;

    try {
        const newName = new Name({ name });
        await newName.save();
        res.status(200).json({ message: 'Name added successfully' });
    } catch (error) {
        res.status(500).json({ error: 'Failed to add name' });
    }
});

app.get('/names', async (req, res) => {
    try {
        const names = await Name.find();
        res.status(200).json(names);
    } catch (error) {
        res.status(500).json({ error: 'Failed to fetch names' });
    }
});

// Start server
const PORT = 5000;
app.listen(PORT, () => console.log(`Server running on http://localhost:${PORT}`));
